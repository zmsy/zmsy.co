title: Discovering PICO-8
---
author: Zach Morrissey
---
body:

The [PICO-8](https://www.lexaloffle.com/pico-8.php) is a 'fantasy console', which is basically a virtual machine for programming videogames with a set amount of memory, disk space, screen size, etc. I discovered it after I recently played the excellent [Celeste for Nintendo Switch](https://www.nintendo.com/games/detail/celeste-switch) and learning that it started life as a PICO-8 game. This thing looks _damn fun_ to program for, and it comes batteries-included for most tasks so you can get up and running in no time.

![PICO 8 Illustration From Lexaloffle](pico-8.png)

#### Highlights

* Lua scripting.
* 16-color palette.
* 128 x 128 pixel screen size.
* 32k cartridge sizes.
* 4-channel sound.

On top of all that, the VM that runs the PICO-8 cartridge has been ported to hardware! It's being included in all $9 [C.H.I.P.](https://getchip.com/pages/chip) computers by default now, so you can actually get a hardware implementation of the PICO-8 fantasy console for use in your own home.

People make some _suuuuuuuuuuper_ cool stuff with it.

<!-- Examples -->
<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">This is easily the most fun I&#39;ve had working on a project! If you like what you see, give it a shot, and let me know what you think! Not nearly finished yet, but it already feels so good!<a href="https://twitter.com/hashtag/acceler8?src=hash&amp;ref_src=twsrc%5Etfw">#acceler8</a> <a href="https://twitter.com/hashtag/pico8?src=hash&amp;ref_src=twsrc%5Etfw">#pico8</a> <a href="https://twitter.com/hashtag/indiedev?src=hash&amp;ref_src=twsrc%5Etfw">#indiedev</a> <a href="https://twitter.com/hashtag/gamedev?src=hash&amp;ref_src=twsrc%5Etfw">#gamedev</a><a href="https://t.co/dWOhl3zRfW">https://t.co/dWOhl3zRfW</a> <a href="https://t.co/aAjSnCcqjC">pic.twitter.com/aAjSnCcqjC</a></p>&mdash; Master of None (@Alturos) <a href="https://twitter.com/Alturos/status/991155950328348672?ref_src=twsrc%5Etfw">May 1, 2018</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Just started messing around with <a href="https://twitter.com/hashtag/pico8?src=hash&amp;ref_src=twsrc%5Etfw">#pico8</a> but it&#39;s pretty fun for weekend hobby dev. <a href="https://twitter.com/hashtag/gamedev?src=hash&amp;ref_src=twsrc%5Etfw">#gamedev</a> <a href="https://twitter.com/hashtag/indiedev?src=hash&amp;ref_src=twsrc%5Etfw">#indiedev</a> <a href="https://t.co/6bkoP3w2e5">pic.twitter.com/6bkoP3w2e5</a></p>&mdash; Ted Ajax Dobyns (@TedAjax) <a href="https://twitter.com/TedAjax/status/995712327398768641?ref_src=twsrc%5Etfw">May 13, 2018</a></blockquote>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">&quot;Remember: this is a sneaking mission...&quot;<a href="https://twitter.com/hashtag/mono8?src=hash&amp;ref_src=twsrc%5Etfw">#mono8</a> <a href="https://twitter.com/hashtag/screenshotsaturday?src=hash&amp;ref_src=twsrc%5Etfw">#screenshotsaturday</a> <a href="https://twitter.com/hashtag/pico8?src=hash&amp;ref_src=twsrc%5Etfw">#pico8</a> <a href="https://twitter.com/hashtag/indiegames?src=hash&amp;ref_src=twsrc%5Etfw">#indiegames</a> <a href="https://twitter.com/hashtag/indiedev?src=hash&amp;ref_src=twsrc%5Etfw">#indiedev</a> <a href="https://twitter.com/hashtag/gamedev?src=hash&amp;ref_src=twsrc%5Etfw">#gamedev</a> <a href="https://twitter.com/hashtag/guerrillawars?src=hash&amp;ref_src=twsrc%5Etfw">#guerrillawars</a> <a href="https://twitter.com/hashtag/monogame?src=hash&amp;ref_src=twsrc%5Etfw">#monogame</a> <a href="https://twitter.com/hashtag/metalgear?src=hash&amp;ref_src=twsrc%5Etfw">#metalgear</a> <a href="https://t.co/NFWUkgK3uC">pic.twitter.com/NFWUkgK3uC</a></p>&mdash; Matt Hughson (@matthughson) <a href="https://twitter.com/matthughson/status/989359766332891136?ref_src=twsrc%5Etfw">April 26, 2018</a></blockquote>

## Let's Give It a Shot

Starting out, I checked out [this instructional youtube playlist](https://www.youtube.com/watch?v=M7azf71z0QE) by TeamworkCast. It helped me get an idea of what I wanted to create with PICO-8 (alongside being super entertaining). So now I was in a place where I had to figure out:

* Game programming patterns. How do people make games, well, 
* Designing movement and obstacles.
* Sounds & sound editing.

Super easy, right? Well, no. Turns out people spend their entire lives getting good at these things. I've been doing a lot of research into how to get better at it though.

## Resources Used

The things that helped me learn PICO-8, by subject area:

### PICO-8 Reference Materials

I tend to benefit from cataloguing the resources that I use when learning something.

- [PICO-8 API](https://neko250.github.io/pico8-api/) by [Neko250](https://neko250.github.io/). A neat little reference for helping figure out the calls you can make from PICO-8 itself.
- [/r/pico8 subreddit](https://www.reddit.com/r/pico8/) - An exceedingly helpful community of people who are both PICO-8 game designers and enthusiasts.
- [PICO-8 Cheat Sheet](https://i.imgur.com/iGrP5bK.png) - A quick reference made by the users of /r/pico8.
- [Lua for Programmers Cheat Sheet](https://pastebin.com/AU4JGHqC) - Admittedly, grasping with the overwhelming simplicity of Lua was a little frustrating at first, but having a slew of examples helped.

### Sprites / Graphics

- [Aseprite](https://www.aseprite.org/) - A convenient sprite editor that can create files you can later [import](http://pico-8.wikia.com/wiki/Import).














---
pub_date: 2018-05-03
---
twitter_handle: _zmsy
---
_hidden: no
---
slug_title: discovering-pico-8
