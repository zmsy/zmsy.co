title: The Switch to Webpack 4
---
author: Zach Morrissey
---
body:

![Gulp to Webpack Transition](gulp_to_webpack.png)

I've always been interested in using Webpack to generate this site, but the heavily config-oriented earlier versions of  Webpack (2.x, 3.x) always seemed to create enough errors & difficulty that I found it wasn't worth it. The explicit pipelines from Gulp were always significantly easier. Yet, after using [Nuxt.js](https://nuxtjs.org/) for a recent project–which works exceedingly well with Webpack–I decided that it was time to jump on the bandwagon.
 
## Reasons for Switching

Gulp is still a super useful tool, and it's very good at creating flexible tasks to be run on a regular basis. Webpack and Gulp, however, are two separate tools with completely different aims.

### The Good

- Outside of NPM itself, [Webpack is the most popular build tool today](https://stateofjs.com/2017/build-tools/results), with about a 45% increase in users who have used it and would like to use it again.
- [Webpack has a built-in integration with Lektor](https://github.com/lektor/lektor-webpack-support), it made for a better development story once all the kinks were worked out.
- Webpack is a module bundler by default. If you orient your assets in a way that Webpack can consume them, you'll end up bundling their outputs nicely into a single file like you expected.
- [Webpack 4 has 'zero config' options](https://medium.com/webpack/webpack-4-released-today-6cdb994702d4#dfa8). The configuration file is a well-known pain point for Webpack, as it tends to create a lot of headaches very quickly. Being able to replace my ailing, convoluted Webpack 2/3 config files with defaults was appealing to me.
- The move to 'convention over configuration' is approaching. Sane defaults, opinionated by common methods, and tooling built for the majority of use cases.
- Includes splitting into 'prod' and 'dev' modes by default. It was always possible, but this is a major part of the webpack API now.

### The Bad

- Webpack documentation is confusing, sparse, and littered with examples that make no sense. Finding working examples is _very_ difficult.
- NPM module configuration for Webpack is a major source of frustration, because libraries are getting replaced & deprecated so quickly that what may have worked today is not guaranteed to work a few months from now.
- Transitioning from a working Webpack 2/3 config to Webpack 4 (either using config or zero-config options) is difficult.
---
pub_date: 2018-06-09
---
slug_title: gulp-webpack-4
---
twitter_handle: _zmsy
---
_hidden: yes
